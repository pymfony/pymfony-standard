#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys;
import os;
# if you don't want to setup permissions the proper way, just uncomment the following PHP line
# read http://symfony.com/doc/current/book/installation.html#configuration-and-setup for more information
# os.umask(0o000);

if sys.version_info[0] == 2:
    import imp;
    def load_source(modulename, filename):
        return imp.load_source(modulename, filename);
else:
    import importlib;
    def load_source(modulename, filename):
        return importlib.machinery.SourceFileLoader(modulename, filename).load_module();

def require(filename, localVars = locals()):
    module = load_source('', filename);
    moduleVars = dir(module);
    for varname in moduleVars:
        if not varname.startswith('__') and not varname.endswith('__'):
            localVars[varname] = getattr(module, varname);
    if '__included_files__' not in localVars:
        localVars['__included_files__'] = list();
    localVars['__included_files__'].append(filename);

def require_once(filename, localVars = locals()):
    if '__included_files__' in localVars:
        if filename in localVars['__included_files__']:
            return;
    return require(filename, localVars);

require_once(os.path.dirname(__file__)+"/bootstrap.py");
require_once(os.path.dirname(__file__)+"/app_kernel.py");

from pymfony.component.console import Request;


request = Request.createFromGlobals();

env = os.getenv('PYMFONY_ENV', False);
if not env:
    env = 'dev';
env = request.getParameterOption(['--env', '-e'], env);
debug = bool(os.getenv('PYMFONY_DEBUG') != '0' and not request.hasParameterOption(['--no-debug', '']) and env != 'prod');

kernel = AppKernel(env, debug);

response = kernel.getConsoleKernel().handle(request);
response.send();

sys.exit(response.getStatusCode());
